'scopeName': 'text.srltext'
'name': 'SRLText'
'injectionSelector': '*'
'patterns': [
  {
    'include': '#sel-begin'
  }
  {
    'include': '#list-begin'
  }
  {
    'match': '<<--(.+)-->>'
    'name': 'comment.block.srltext',
  }
  {
    'include': '#tag-double'
  }
]
'repository':
  'comment':
    'begin': '--'
    'end' :'--'
    'name': 'comment.line.srltext'
  'operator':
    'match': '&(A(?:PREFIX|SUFFIX)?|C|D|E(F|L)?([0-9]*)|F|G|HX?|L|M|N|P!?([A-Z0-9_]+\.[A-Z0-9_]+)|Q|R|S(?:BLANK)?|U|V|W|X|#(ASCII|LATIN|UCAS|MD5|5|URL|BASE64|BASE64URL|SQL|AES|TDES|BLOWFISH|SSO|SSOREC)|%|@)'
    'captures':
      '0':
        'name': 'keyword.control.amp.srltext'
      '2':
        'name': 'variable.other.srltext'
      '3':
        'name': 'variable.other.srltext'
      '4':
        'name': 'variable.other.srltext'
      '5':
        'name': 'variable.other.srltext'
  'slp-ref':
    'match': '@([A-Z0-9_.]+)'
    'name': 'entity.name.function.srltext'
  'variable-definition':
    'match': '(#(?:[A-Z0-9_.]+))(=)'
    'captures':
      '1':
        'name': 'punctuation.definition.variable.srltext'
      '2':
        'name': 'keyword.operator.assignment.srltext'
    'patterns': [
      { 'include': '#tag-single' }
    ]
  'task-parameter-ref':
    'match': '(TKPV~[A-Z0-9_-]+~[A-Z0-9_-]+)'
    'name': 'variable.other.srltext'
  'variable-ref':
    'match': '#([A-Z0-9_.]+)'
    'name': 'variable.other.srltext'
  'field-ref':
    'match': '([A-Z]{3,4}_[A-Z0-9]+)(?:(\\.)([A-Z0-9]+))?(?:(\\.)([A-Z]{3,10}))?(?:=([^<·]*))?'
    'captures':
      '1':
        'name': 'entity.other.attribute-name.srltext'
      '2':
        'name': 'meta.delimiter.property.period.srltext'
      '3':
        'name': 'entity.other.attribute-name.srltext'
      '4':
        'name': 'meta.delimiter.property.period.srltext'
      '5':
        'name': 'entity.other.attribute-name.srltext'
      '6':
        'name': 'string.srltext'
  'special-register':
    'match': '\\$\\$?([a-zA-Z0-9_]+)'
    'name': 'support.variable.global.srltext'
  'dmu-action':
    'match': '(P[0-9]+)=.*?(·;)?'
    'captures':
      '1':
        'name': 'keyword.control.register.srltext'
      '2':
        'name': 'punctuation.definition.separator.srltext'
  'tag-double':
    'begin': '(<<)'
    'captures':
      '1':
        'name': 'punctuation.definition.tag.srltext'
    'end': '(>>)'
    'name': 'meta.tag.preprocessor.srltext'
    'patterns': [
      {
        'include': '#tag-single'
      }
      {
        'include': '#comment'
      }
      {
        'include': '#slp-ref'
      }
      {
        'include': '#variable-definition'
      }
      {
        'include': '#task-parameter-ref'
      }
      {
        'include': '#variable-ref'
      }
      {
        'include': '#field-ref'
      }
      {
        'include': '#operator'
      }
      {
        'include': '#special-register'
      }
      {
        'include': '#string'
      }
      {
        'include': '#dmu-action'
      }
    ]
  'tag-single':
    'begin': '(<)'
    'end': '(>)'
    'name': 'meta.tag.preprocessor.srltext'
    'patterns': [
      {
        'include': '#operator'
      }
      {
        'include': '#comment'
      }
      {
        'include': '#slp-ref'
      }
      {
        'include': '#variable-definition'
      }
      {
        'include': '#task-parameter-ref'
      }
      {
        'include': '#variable-ref'
      }
      {
        'include': '#field-ref'
      }
      {
        'include': '#special-register'
      }
      {
        'include': '#string'
      }
    ],
  'string':
    'begin': '"'
    'end': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.srltext'
    'name': 'punctuation.definition.string.end.srltext'
    'endCaptures':
      '0':
        'name': 'string.quoted.double.srltext'
    'patterns': [
      {'include': '#tag-double'}
      {'include': '#tag-single'}
    ]
  'conditionals':
   'patterns': [
     {
       'include': '#tag-double'
     }
     {
       'include': '#string'
     }
   ]
  'sel-begin':
    'begin': '\\{\\{(--(?:.*)--)?(SEL):\\(?'
    'end': '\\)?:'
    'beginCaptures':
      '1':
        'name': 'comment.line.srltext'
      '2':
        'name': 'keyword.control.srltext'
    'patterns': [
      {
        'include': '#conditionals'
      }
    ]
  'list-begin':
    'begin': '\\[\\[(([A-Z0-9]+)\\.([A-Z0-9]+)):'
    'end': '\\]\\]'
    'beginCaptures':
      '1':
        'name': 'meta.tag.preprocessor.srltext'
    'patterns': [
      {
        'begin': '(SEL):'
        'end': ':'
        'beginCaptures':
          '1':
            'name': 'keyword.control.srltext'
        'patterns': [
          {
            'include': '#conditionals'
          }
        ]
      }
      {
        'include': '#tag-double'
      }
    ]
